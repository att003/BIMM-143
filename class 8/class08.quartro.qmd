---
title: "Class 08: Machine Learning Mini Project"
author: "Anh Tran"
format: pdf
---

#1. Explore Data Analysis
The data from online is retrieved here: https://bioboot.github.io/bimm143_S20/class-material/WisconsinCancer.csv

```{r}
wisc.df <- read.csv("WisconsinCancer.csv", row.names=1)
head(wisc.df)
```

```{r}
wisc.data <- wisc.df[,-1]
#wisc.data
```

```{r}
diagnosis <-
  as.factor(wisc.df$diagnosis)
diagnosis
```
>Q1. How many observations are in this dataset?

```{r}
nrow(wisc.df)
```

>Q2. How many of the observations have a malignant diagnosis?

```{r}
table(wisc.df$diagnosis)
```

>Q3. How many variables/features in the data are suffixed with _mean?

```{r}
colnames(wisc.df)
length.mean <- grep("_mean", colnames(wisc.df))

length(length.mean)
```

#Principal Component Analysis

```{r}
colMeans(wisc.data)
apply(wisc.data, 2, sd)
```

```{r}
wisc.pr <- prcomp(wisc.data, scale = TRUE)
summary(wisc.pr)
plot(wisc.pr)
```

>Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

```{r}
summary(wisc.pr)$importance[3,1]
```

>Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

```{r}
which(summary(wisc.pr)$importance[3,] >= 0.7)[1]
```

>Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

```{r}
which(summary(wisc.pr)$importance[3,] >= 0.9)[1]
```

```{r}
biplot(wisc.pr)
```

>Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

The plot is extremely difficult to look at and understand because the information is clustered together with the row names included.

Let's make a PC plot (a.k.a. "score plot" or "PC1 vs PC2" etc. plot)
```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,2], col=diagnosis, xlab = "PC1", ylab = "PC2")
```

>Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,3], col=diagnosis, xlab="PC1", ylab="PC3")
```

The separation between the subgroups is cleaner in "PC1 vs PC2" plot compared to "PC1 vs PC3" plot due to PC2 capturing more variance in the original data. 

```{r}
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis
library(ggplot2)
ggplot(df) + aes(PC1, PC2, col = df$diagnosis) + geom_point()
```
```{r}
pr.var <- (wisc.pr$sdev)^2
head(pr.var)
```

```{r}
pve <- pr.var / sum(pr.var)
plot(pve, xlab = "Principal Component", ylab = "Proportion of Variance Explained", ylim = c(0,1), type = "o")
```
>Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?

```{r}
wisc.pr$rotation[rownames(wisc.pr$rotation)=="concave.points_mean",][1]
```


>Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

```{r}
which(summary(wisc.pr)$importance[3,] >= 0.8)[1]
```

#3. Hierarchical clustering

```{r}
data.scaled <- scale(wisc.data)
data.dist <- dist(data.scaled)
wisc.hclust <- hclust(data.dist, method="complete")
```

>Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)
abline(h=18, col="red", lty=2)
```

The height at which the clustering model has 4 clusters is 18

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, k=4)
table(wisc.hclust.clusters, diagnosis)
```

>Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10?

```{r}
wisc.hclust.clusters.multiple <- cutree(wisc.hclust, k=2:10)
table(wisc.hclust.clusters.multiple[,1], diagnosis)
```

Yes, cutting into 2 clusters would result in a better cluster vs diagnoses match. 

```{r}
single.hclust <- hclust(data.dist, method="single")
plot(single.hclust)
average.hclust <- hclust(data.dist, method="average")
plot(average.hclust)
ward.hclust <- hclust(data.dist, method="ward.D2")
plot(ward.hclust)
```

>Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

ward.D2 is my favorite method to use because since it starts bottom up, it gives a cleaner and more defined result. 

#4. K-means clustering

```{r}
wisc.km <- kmeans(data.scaled, centers=2, nstart= 20)
table(wisc.km$cluster, diagnosis)
table(wisc.km$cluster, wisc.hclust.clusters)
```

>Q14. How well does k-means separate the two diagnoses? How does it compare to your hclust results?
 
k-means separate the two diagnoses pretty well, even slightly better than compared to the hclust results. 

#5. Combining Methods

```{r}
wisc.pr.hclust <- hclust(dist(wisc.pr$x[, 1:7]), method="ward.D2")
plot(wisc.pr.hclust)
```

```{r}
grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
```

```{r}
table(diagnosis, grps)
```

```{r}
g <- as.factor(grps)
g <- relevel(g,2)
levels(g)
plot(wisc.pr$x[,1], wisc.pr$x[,2], col=g, xlab="PC1", ylab="PC2")
```

```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,2], col=diagnosis, xlab="PC1", ylab="PC2")
```

>Q15. How well does the newly created model with four clusters separate out the two diagnoses?

```{r}
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
table(wisc.pr.hclust.clusters, diagnosis)
```

It separates the two diagnoses okay but not as good as the other methods

>Q16. How well do the k-means and hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.

```{r}
table(wisc.km$cluster, diagnosis)
table(wisc.hclust.clusters, diagnosis)
```

They both do pretty well in separating the diagnoses. 

#6. Senstivity/Specificity

>Q17. Which of your analysis procedures resulted in a clustering model with the best specificity? How about sensitivity?

From the clustering models, using hierarchical clustering with k=2 gives the best specificity and sensistivity. However, with k=4, hclust and kmeans result in the same specificity and kmeans produces the best sensitivity.

#7. Prediction

```{r}
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```
```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```