---
title: "Class 05: Data Visualization with GGPLOT"
author: "Anh Tran"
format: pdf
---
>Q1: All of the above
>Q2: FALSE
>Q3: Network graphs
>Q4: ggplot2 is the only way to create plots in R
>Q5: geom_point()

```{r}
library(ggplot2)
ggplot(cars)
```


```{r}
ggplot(cars) + aes(x=speed, y=dist) 
```

```{r}
ggplot(cars) + aes(x=speed, y=dist) + geom_point() 
```

```{r}
ggplot(cars) + aes(x=speed, y=dist) + geom_point() + geom_smooth()
```

Argue with geom_smooth() to add a straight line from a linear model without the shaded standard error region

```{r}
ggplot(cars) + aes(x=speed, y=dist) + geom_point() + geom_smooth(method="lm", se=FALSE)
```

```{r}
ggplot(cars) + aes(x=speed, y=dist) + geom_point() + labs(titles="Speed and Stopping Distances of Cars", x="Speed(MPH)", y="Stopping Distance(ft)", subtitle="Your information subtitle text here", caption="Dataset: 'cars'") + geom_smooth(method="lm", se=FALSE) + theme_bw()
```

Adding more plot aesthetics through (aes)

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```

>Q6:  Use the nrow() function to find out how many genes are in this dataset. What is your answer? 

```{r}
nrow(genes)
```

>Q7: Use the colnames() function and the ncol() function on the genes data frame to find out what the column names are (we will need these later) and how many columns there are. How many columns did you find? 

```{r}
colnames(genes)
ncol(genes)
```

>Q8: Use the table() function on the State column of this data.frame to find out how many ‘up’ regulated genes there are. What is your answer? 

```{r}
table(genes$State)
```

>Q9:  Using your values above and 2 significant figures. What fraction of total genes is up-regulated in this dataset? 

```{r}
round(table(genes$State)/nrow(genes) * 100, 2)
```

```{r}
ggplot(genes) + aes(x=Condition1, y=Condition2) + geom_point()
```

```{r}
p <- ggplot(genes) + aes(x=Condition1, y=Condition2, col=State) + geom_point()
p
```

```{r}
p + scale_colour_manual(values=c("blue","gray","red") )
```

```{r}
p + scale_colour_manual(values=c("blue","gray","red")) + labs(title="Gene Expresion Changes Upon Drug Treatment", x="Control (no drug) ", y="Drug Treatment")
```

```{r}
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"
gapminder <- read.delim(url)
```

```{r}
library(dplyr)
gapminder_2007 <- gapminder %>% filter(year==2007)
```

```{r}
ggplot(gapminder_2007) + aes(x=gdpPercap, y=lifeExp) + geom_point()
```

```{r}
ggplot(gapminder_2007) + aes(x=gdpPercap, y=lifeExp) + geom_point(alpha=0.5)
```

```{r}
ggplot(gapminder_2007) + aes(x=gdpPercap, y=lifeExp, color=continent, size=pop) + geom_point(alpha=0.5)
```

```{r}
ggplot(gapminder_2007) + aes(x = gdpPercap, y = lifeExp, color = pop) + geom_point(alpha=0.8)
```

```{r}
ggplot(gapminder_2007) + aes(x = gdpPercap, y = lifeExp, size = pop) + geom_point(alpha=0.5)
```

```{r}
ggplot(gapminder_2007) + geom_point(aes(x = gdpPercap, y = lifeExp, size = pop), alpha=0.5) + scale_size_area(max_size = 10)
```

```{r}
gapminder_1957 <- gapminder %>% filter(year==1957)

ggplot(gapminder_1957) + aes(x = gdpPercap, y = lifeExp, color=continent, size = pop) + geom_point(alpha=0.7) + scale_size_area(max_size = 10) 
```

```{r}
gapminder_1957 <- gapminder %>% filter(year==1957 | year==2007)

ggplot(gapminder_1957) + geom_point(aes(x = gdpPercap, y = lifeExp, color=continent, size = pop), alpha=0.7) + scale_size_area(max_size = 10) + facet_wrap(~year)
```

```{r}
gapminder_top5 <- gapminder %>%
  filter(year==2007) %>% 
  arrange(desc(pop)) %>% 
  top_n(5, pop)

gapminder_top5
```

```{r}
ggplot(gapminder_top5) + geom_col(aes(x = country, y = pop))
```

```{r}
ggplot(gapminder_top5) +  geom_col(aes(x = country, y = lifeExp))
```

```{r}
ggplot(gapminder_top5) + aes(x=reorder(country, -pop), y=pop, fill=country) + geom_col(col="gray30") + guides(fill="none")
```

```{r}
head(USArrests)
```

```{r}
USArrests$State <- rownames(USArrests)
ggplot(USArrests) + aes(x=reorder(State,Murder), y=Murder) + geom_col() + coord_flip()
```

```{r}
ggplot(USArrests) + aes(x=reorder(State,Murder), y=Murder) + geom_point() + geom_segment(aes(x=State, xend=State, y=0, yend=Murder), color="blue") + coord_flip()
```

```{r}
library(gapminder)
library(gganimate)

ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) + geom_point(alpha = 0.7, show.legend = FALSE) + scale_colour_manual(values = country_colors) + scale_size(range = c(2, 12)) + scale_x_log10() + facet_wrap(~continent) + labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') + transition_time(year) + shadow_wake(wake_length = 0.1, alpha = FALSE)
```


```{r}
sessionInfo()
```