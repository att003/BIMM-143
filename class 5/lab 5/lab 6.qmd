---
title: "Lab 6 R functions"
author: "Anh Tran"
date: "10/13/2022"
format: pdf
editor: visual
---
>Q1. Write a function grade() to determine an overall grade from a vector of student homework assignment scores dropping the lowest single score. If a student misses a homework (i.e. has an NA value) this can be used as a score to be potentially dropped. 

```{r}
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```

```{r}
mean(student1)
```

```{r}
min(student1)
```

```{r}
which.min(student1)
```

Looking at the see also section of the `min()` help page I found out about `which.min()`. this finds the position of the lowest score.

```{r}
which.min(student1)
```


```{r}
mean(student1[ -which.min(student1)])
```

`is.na()` helps assign a value to na

```{r}
student2[is.na(student2)] <- 0
mean(student2[ -which.min(student2)])
```

Does it matter to add square brackets here? Yes, it matters to use square bracket to access the elements because assigning 0 to the function does not make sense. 

```{r}
student3[is.na(student3)] <- 0
mean(student3[ -which.min(student3)])
```

Turning elements into x
```{r}
x <- student1
x[is.na(x)] <- 0
mean(x[ -which.min(x)])
```

Assigning function
```{r}
grade <- function(x) {
  x[is.na(x)] <- 0
  mean(x[ -which.min(x)])
}
```

```{r}
url <- "https://tinyurl.com/gradeinput"
gradebook <- read.csv(url, row.names=1)
```

```{r}
head(gradebook)
```

Using `apply()`: x is an array (gradebook), margin: 1 for row, 2 for column (1), fun is function (grade)


```{r}
results <- apply(gradebook, 1, grade)
results
```

>Q2. Using your grade() function and the supplied gradebook, Who is the top scoring student overall in the gradebook? [3pts]

```{r}
results[which.max(results)]
```
>Q3. From your analysis of the gradebook, which homework was toughest on students (i.e. obtained the lowest scores overall? [2pts]

```{r}
which.min(apply(gradebook, 2, sum, na.rm=TRUE))
```

>Q4. Optional Extension: From your analysis of the gradebook, which homework was most predictive of overall score (i.e. highest correlation with average grade score)? 

```{r}
mask <- gradebook
mask[ is.na(mask)] <- 0

cor(mask$hw5, results)
```

Need to y=results to do correlation of x versus y. Advantage of using `apply()` is being able to indicates column/row

```{r}
which.max(apply(mask, 2, cor, y=results))
```